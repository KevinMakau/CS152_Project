Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program function

    3 function: FUNCTION IDENTIFIER SEMICOLON BEGINPARAMS declaration_loop ENDPARAMS BEGINLOCALS declaration_loop ENDLOCALS BEGINBODY statement_loop ENDBODY

    4 declaration_loop: %empty
    5                 | declaration_loop declaration SEMICOLON

    6 statement_loop: statement SEMICOLON
    7               | statement_loop statement SEMICOLON

    8 declaration: id_loop COLON INTEGER
    9            | id_loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   10 id_loop: IDENTIFIER
   11        | id_loop COMMA IDENTIFIER

   12 statement: var ASSIGN expression
   13          | IF bool_expr THEN statement_loop ENDIF
   14          | IF bool_expr THEN statement_loop ELSE statement_loop ENDIF
   15          | WHILE bool_expr BEGINLOOP statement_loop ENDLOOP
   16          | DO BEGINLOOP statement_loop ENDLOOP WHILE bool_expr
   17          | READ var_loop
   18          | WRITE var_loop
   19          | CONTINUE
   20          | RETURN expression

   21 var_loop: var
   22         | var_loop COMMA var

   23 bool_expr: relation_and_expr
   24          | bool_expr OR relation_and_expr

   25 relation_and_expr: relation_expr
   26                  | relation_and_expr AND relation_expr

   27 relation_expr: expression comp expression
   28              | NOT expression comp expression
   29              | TRUE
   30              | NOT TRUE
   31              | FALSE
   32              | NOT FALSE
   33              | L_PAREN bool_expr R_PAREN

   34 comp: EQ
   35     | NEQ
   36     | LT
   37     | GT
   38     | LTE
   39     | GTE

   40 expression: mult_expr
   41           | expression ADD mult_expr
   42           | expression SUB mult_expr

   43 mult_expr: term
   44          | mult_expr mulop term

   45 mulop: MULT
   46      | DIV
   47      | MOD

   48 term: var
   49     | SUB var
   50     | NUMBER
   51     | SUB NUMBER
   52     | L_PAREN expression R_PAREN
   53     | SUB L_PAREN expression R_PAREN
   54     | IDENTIFIER L_PAREN R_PAREN
   55     | IDENTIFIER L_PAREN expression_loop R_PAREN

   56 expression_loop: expression
   57                | expression_loop COMMA expression

   58 var: IDENTIFIER
   59    | IDENTIFIER L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 3
BEGINPARAMS (259) 3
ENDPARAMS (260) 3
BEGINLOCALS (261) 3
ENDLOCALS (262) 3
BEGINBODY (263) 3
ENDBODY (264) 3
INTEGER (265) 8 9
ARRAY (266) 9
OF (267) 9
IF (268) 13 14
THEN (269) 13 14
ENDIF (270) 13 14
ELSE (271) 14
WHILE (272) 15 16
DO (273) 16
BEGINLOOP (274) 15 16
ENDLOOP (275) 15 16
CONTINUE (276) 19
READ (277) 17
WRITE (278) 18
AND (279) 26
OR (280) 24
NOT (281) 28 30 32
TRUE (282) 29 30
FALSE (283) 31 32
RETURN (284) 20
ADD (285) 41
SUB (286) 42 49 51 53
MULT (287) 45
DIV (288) 46
MOD (289) 47
EQ (290) 34
NEQ (291) 35
LT (292) 36
GT (293) 37
LTE (294) 38
GTE (295) 39
SEMICOLON (296) 3 5 6 7
COLON (297) 8 9
COMMA (298) 11 22 57
L_PAREN (299) 33 52 53 54 55
R_PAREN (300) 33 52 53 54 55
L_SQUARE_BRACKET (301) 9 59
R_SQUARE_BRACKET (302) 9 59
ASSIGN (303) 12
IDENTIFIER (304) 3 10 11 54 55 58 59
NUMBER (305) 9 50 51


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
program (52)
    on left: 1 2, on right: 0 2
function (53)
    on left: 3, on right: 2
declaration_loop (54)
    on left: 4 5, on right: 3 5
statement_loop (55)
    on left: 6 7, on right: 3 7 13 14 15 16
declaration (56)
    on left: 8 9, on right: 5
id_loop (57)
    on left: 10 11, on right: 8 9 11
statement (58)
    on left: 12 13 14 15 16 17 18 19 20, on right: 6 7
var_loop (59)
    on left: 21 22, on right: 17 18 22
bool_expr (60)
    on left: 23 24, on right: 13 14 15 16 24 33
relation_and_expr (61)
    on left: 25 26, on right: 23 24 26
relation_expr (62)
    on left: 27 28 29 30 31 32 33, on right: 25 26
comp (63)
    on left: 34 35 36 37 38 39, on right: 27 28
expression (64)
    on left: 40 41 42, on right: 12 20 27 28 41 42 52 53 56 57 59
mult_expr (65)
    on left: 43 44, on right: 40 41 42 44
mulop (66)
    on left: 45 46 47, on right: 44
term (67)
    on left: 48 49 50 51 52 53 54 55, on right: 43 44
expression_loop (68)
    on left: 56 57, on right: 55 57
var (69)
    on left: 58 59, on right: 12 21 22 48 49


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . function

    $end      shift, and go to state 2
    FUNCTION  shift, and go to state 3

    function  go to state 4


State 2

    0 $accept: program $end .

    $default  accept


State 3

    3 function: FUNCTION . IDENTIFIER SEMICOLON BEGINPARAMS declaration_loop ENDPARAMS BEGINLOCALS declaration_loop ENDLOCALS BEGINBODY statement_loop ENDBODY

    IDENTIFIER  shift, and go to state 5


State 4

    2 program: program function .

    $default  reduce using rule 2 (program)


State 5

    3 function: FUNCTION IDENTIFIER . SEMICOLON BEGINPARAMS declaration_loop ENDPARAMS BEGINLOCALS declaration_loop ENDLOCALS BEGINBODY statement_loop ENDBODY

    SEMICOLON  shift, and go to state 6


State 6

    3 function: FUNCTION IDENTIFIER SEMICOLON . BEGINPARAMS declaration_loop ENDPARAMS BEGINLOCALS declaration_loop ENDLOCALS BEGINBODY statement_loop ENDBODY

    BEGINPARAMS  shift, and go to state 7


State 7

    3 function: FUNCTION IDENTIFIER SEMICOLON BEGINPARAMS . declaration_loop ENDPARAMS BEGINLOCALS declaration_loop ENDLOCALS BEGINBODY statement_loop ENDBODY

    $default  reduce using rule 4 (declaration_loop)

    declaration_loop  go to state 8


State 8

    3 function: FUNCTION IDENTIFIER SEMICOLON BEGINPARAMS declaration_loop . ENDPARAMS BEGINLOCALS declaration_loop ENDLOCALS BEGINBODY statement_loop ENDBODY
    5 declaration_loop: declaration_loop . declaration SEMICOLON

    ENDPARAMS   shift, and go to state 9
    IDENTIFIER  shift, and go to state 10

    declaration  go to state 11
    id_loop      go to state 12


State 9

    3 function: FUNCTION IDENTIFIER SEMICOLON BEGINPARAMS declaration_loop ENDPARAMS . BEGINLOCALS declaration_loop ENDLOCALS BEGINBODY statement_loop ENDBODY

    BEGINLOCALS  shift, and go to state 13


State 10

   10 id_loop: IDENTIFIER .

    $default  reduce using rule 10 (id_loop)


State 11

    5 declaration_loop: declaration_loop declaration . SEMICOLON

    SEMICOLON  shift, and go to state 14


State 12

    8 declaration: id_loop . COLON INTEGER
    9            | id_loop . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   11 id_loop: id_loop . COMMA IDENTIFIER

    COLON  shift, and go to state 15
    COMMA  shift, and go to state 16


State 13

    3 function: FUNCTION IDENTIFIER SEMICOLON BEGINPARAMS declaration_loop ENDPARAMS BEGINLOCALS . declaration_loop ENDLOCALS BEGINBODY statement_loop ENDBODY

    $default  reduce using rule 4 (declaration_loop)

    declaration_loop  go to state 17


State 14

    5 declaration_loop: declaration_loop declaration SEMICOLON .

    $default  reduce using rule 5 (declaration_loop)


State 15

    8 declaration: id_loop COLON . INTEGER
    9            | id_loop COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 18
    ARRAY    shift, and go to state 19


State 16

   11 id_loop: id_loop COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 20


State 17

    3 function: FUNCTION IDENTIFIER SEMICOLON BEGINPARAMS declaration_loop ENDPARAMS BEGINLOCALS declaration_loop . ENDLOCALS BEGINBODY statement_loop ENDBODY
    5 declaration_loop: declaration_loop . declaration SEMICOLON

    ENDLOCALS   shift, and go to state 21
    IDENTIFIER  shift, and go to state 10

    declaration  go to state 11
    id_loop      go to state 12


State 18

    8 declaration: id_loop COLON INTEGER .

    $default  reduce using rule 8 (declaration)


State 19

    9 declaration: id_loop COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 22


State 20

   11 id_loop: id_loop COMMA IDENTIFIER .

    $default  reduce using rule 11 (id_loop)


State 21

    3 function: FUNCTION IDENTIFIER SEMICOLON BEGINPARAMS declaration_loop ENDPARAMS BEGINLOCALS declaration_loop ENDLOCALS . BEGINBODY statement_loop ENDBODY

    BEGINBODY  shift, and go to state 23


State 22

    9 declaration: id_loop COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 24


State 23

    3 function: FUNCTION IDENTIFIER SEMICOLON BEGINPARAMS declaration_loop ENDPARAMS BEGINLOCALS declaration_loop ENDLOCALS BEGINBODY . statement_loop ENDBODY

    IF          shift, and go to state 25
    WHILE       shift, and go to state 26
    DO          shift, and go to state 27
    CONTINUE    shift, and go to state 28
    READ        shift, and go to state 29
    WRITE       shift, and go to state 30
    RETURN      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32

    statement_loop  go to state 33
    statement       go to state 34
    var             go to state 35


State 24

    9 declaration: id_loop COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 36


State 25

   13 statement: IF . bool_expr THEN statement_loop ENDIF
   14          | IF . bool_expr THEN statement_loop ELSE statement_loop ENDIF

    NOT         shift, and go to state 37
    TRUE        shift, and go to state 38
    FALSE       shift, and go to state 39
    SUB         shift, and go to state 40
    L_PAREN     shift, and go to state 41
    IDENTIFIER  shift, and go to state 42
    NUMBER      shift, and go to state 43

    bool_expr          go to state 44
    relation_and_expr  go to state 45
    relation_expr      go to state 46
    expression         go to state 47
    mult_expr          go to state 48
    term               go to state 49
    var                go to state 50


State 26

   15 statement: WHILE . bool_expr BEGINLOOP statement_loop ENDLOOP

    NOT         shift, and go to state 37
    TRUE        shift, and go to state 38
    FALSE       shift, and go to state 39
    SUB         shift, and go to state 40
    L_PAREN     shift, and go to state 41
    IDENTIFIER  shift, and go to state 42
    NUMBER      shift, and go to state 43

    bool_expr          go to state 51
    relation_and_expr  go to state 45
    relation_expr      go to state 46
    expression         go to state 47
    mult_expr          go to state 48
    term               go to state 49
    var                go to state 50


State 27

   16 statement: DO . BEGINLOOP statement_loop ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 52


State 28

   19 statement: CONTINUE .

    $default  reduce using rule 19 (statement)


State 29

   17 statement: READ . var_loop

    IDENTIFIER  shift, and go to state 32

    var_loop  go to state 53
    var       go to state 54


State 30

   18 statement: WRITE . var_loop

    IDENTIFIER  shift, and go to state 32

    var_loop  go to state 55
    var       go to state 54


State 31

   20 statement: RETURN . expression

    SUB         shift, and go to state 40
    L_PAREN     shift, and go to state 56
    IDENTIFIER  shift, and go to state 42
    NUMBER      shift, and go to state 43

    expression  go to state 57
    mult_expr   go to state 48
    term        go to state 49
    var         go to state 50


State 32

   58 var: IDENTIFIER .
   59    | IDENTIFIER . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 58

    $default  reduce using rule 58 (var)


State 33

    3 function: FUNCTION IDENTIFIER SEMICOLON BEGINPARAMS declaration_loop ENDPARAMS BEGINLOCALS declaration_loop ENDLOCALS BEGINBODY statement_loop . ENDBODY
    7 statement_loop: statement_loop . statement SEMICOLON

    ENDBODY     shift, and go to state 59
    IF          shift, and go to state 25
    WHILE       shift, and go to state 26
    DO          shift, and go to state 27
    CONTINUE    shift, and go to state 28
    READ        shift, and go to state 29
    WRITE       shift, and go to state 30
    RETURN      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32

    statement  go to state 60
    var        go to state 35


State 34

    6 statement_loop: statement . SEMICOLON

    SEMICOLON  shift, and go to state 61


State 35

   12 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 62


State 36

    9 declaration: id_loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 63


State 37

   28 relation_expr: NOT . expression comp expression
   30              | NOT . TRUE
   32              | NOT . FALSE

    TRUE        shift, and go to state 64
    FALSE       shift, and go to state 65
    SUB         shift, and go to state 40
    L_PAREN     shift, and go to state 56
    IDENTIFIER  shift, and go to state 42
    NUMBER      shift, and go to state 43

    expression  go to state 66
    mult_expr   go to state 48
    term        go to state 49
    var         go to state 50


State 38

   29 relation_expr: TRUE .

    $default  reduce using rule 29 (relation_expr)


State 39

   31 relation_expr: FALSE .

    $default  reduce using rule 31 (relation_expr)


State 40

   49 term: SUB . var
   51     | SUB . NUMBER
   53     | SUB . L_PAREN expression R_PAREN

    L_PAREN     shift, and go to state 67
    IDENTIFIER  shift, and go to state 32
    NUMBER      shift, and go to state 68

    var  go to state 69


State 41

   33 relation_expr: L_PAREN . bool_expr R_PAREN
   52 term: L_PAREN . expression R_PAREN

    NOT         shift, and go to state 37
    TRUE        shift, and go to state 38
    FALSE       shift, and go to state 39
    SUB         shift, and go to state 40
    L_PAREN     shift, and go to state 41
    IDENTIFIER  shift, and go to state 42
    NUMBER      shift, and go to state 43

    bool_expr          go to state 70
    relation_and_expr  go to state 45
    relation_expr      go to state 46
    expression         go to state 71
    mult_expr          go to state 48
    term               go to state 49
    var                go to state 50


State 42

   54 term: IDENTIFIER . L_PAREN R_PAREN
   55     | IDENTIFIER . L_PAREN expression_loop R_PAREN
   58 var: IDENTIFIER .
   59    | IDENTIFIER . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 72
    L_SQUARE_BRACKET  shift, and go to state 58

    $default  reduce using rule 58 (var)


State 43

   50 term: NUMBER .

    $default  reduce using rule 50 (term)


State 44

   13 statement: IF bool_expr . THEN statement_loop ENDIF
   14          | IF bool_expr . THEN statement_loop ELSE statement_loop ENDIF
   24 bool_expr: bool_expr . OR relation_and_expr

    THEN  shift, and go to state 73
    OR    shift, and go to state 74


State 45

   23 bool_expr: relation_and_expr .
   26 relation_and_expr: relation_and_expr . AND relation_expr

    AND  shift, and go to state 75

    $default  reduce using rule 23 (bool_expr)


State 46

   25 relation_and_expr: relation_expr .

    $default  reduce using rule 25 (relation_and_expr)


State 47

   27 relation_expr: expression . comp expression
   41 expression: expression . ADD mult_expr
   42           | expression . SUB mult_expr

    ADD  shift, and go to state 76
    SUB  shift, and go to state 77
    EQ   shift, and go to state 78
    NEQ  shift, and go to state 79
    LT   shift, and go to state 80
    GT   shift, and go to state 81
    LTE  shift, and go to state 82
    GTE  shift, and go to state 83

    comp  go to state 84


State 48

   40 expression: mult_expr .
   44 mult_expr: mult_expr . mulop term

    MULT  shift, and go to state 85
    DIV   shift, and go to state 86
    MOD   shift, and go to state 87

    $default  reduce using rule 40 (expression)

    mulop  go to state 88


State 49

   43 mult_expr: term .

    $default  reduce using rule 43 (mult_expr)


State 50

   48 term: var .

    $default  reduce using rule 48 (term)


State 51

   15 statement: WHILE bool_expr . BEGINLOOP statement_loop ENDLOOP
   24 bool_expr: bool_expr . OR relation_and_expr

    BEGINLOOP  shift, and go to state 89
    OR         shift, and go to state 74


State 52

   16 statement: DO BEGINLOOP . statement_loop ENDLOOP WHILE bool_expr

    IF          shift, and go to state 25
    WHILE       shift, and go to state 26
    DO          shift, and go to state 27
    CONTINUE    shift, and go to state 28
    READ        shift, and go to state 29
    WRITE       shift, and go to state 30
    RETURN      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32

    statement_loop  go to state 90
    statement       go to state 34
    var             go to state 35


State 53

   17 statement: READ var_loop .
   22 var_loop: var_loop . COMMA var

    COMMA  shift, and go to state 91

    $default  reduce using rule 17 (statement)


State 54

   21 var_loop: var .

    $default  reduce using rule 21 (var_loop)


State 55

   18 statement: WRITE var_loop .
   22 var_loop: var_loop . COMMA var

    COMMA  shift, and go to state 91

    $default  reduce using rule 18 (statement)


State 56

   52 term: L_PAREN . expression R_PAREN

    SUB         shift, and go to state 40
    L_PAREN     shift, and go to state 56
    IDENTIFIER  shift, and go to state 42
    NUMBER      shift, and go to state 43

    expression  go to state 92
    mult_expr   go to state 48
    term        go to state 49
    var         go to state 50


State 57

   20 statement: RETURN expression .
   41 expression: expression . ADD mult_expr
   42           | expression . SUB mult_expr

    ADD  shift, and go to state 76
    SUB  shift, and go to state 77

    $default  reduce using rule 20 (statement)


State 58

   59 var: IDENTIFIER L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB         shift, and go to state 40
    L_PAREN     shift, and go to state 56
    IDENTIFIER  shift, and go to state 42
    NUMBER      shift, and go to state 43

    expression  go to state 93
    mult_expr   go to state 48
    term        go to state 49
    var         go to state 50


State 59

    3 function: FUNCTION IDENTIFIER SEMICOLON BEGINPARAMS declaration_loop ENDPARAMS BEGINLOCALS declaration_loop ENDLOCALS BEGINBODY statement_loop ENDBODY .

    $default  reduce using rule 3 (function)


State 60

    7 statement_loop: statement_loop statement . SEMICOLON

    SEMICOLON  shift, and go to state 94


State 61

    6 statement_loop: statement SEMICOLON .

    $default  reduce using rule 6 (statement_loop)


State 62

   12 statement: var ASSIGN . expression

    SUB         shift, and go to state 40
    L_PAREN     shift, and go to state 56
    IDENTIFIER  shift, and go to state 42
    NUMBER      shift, and go to state 43

    expression  go to state 95
    mult_expr   go to state 48
    term        go to state 49
    var         go to state 50


State 63

    9 declaration: id_loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 96


State 64

   30 relation_expr: NOT TRUE .

    $default  reduce using rule 30 (relation_expr)


State 65

   32 relation_expr: NOT FALSE .

    $default  reduce using rule 32 (relation_expr)


State 66

   28 relation_expr: NOT expression . comp expression
   41 expression: expression . ADD mult_expr
   42           | expression . SUB mult_expr

    ADD  shift, and go to state 76
    SUB  shift, and go to state 77
    EQ   shift, and go to state 78
    NEQ  shift, and go to state 79
    LT   shift, and go to state 80
    GT   shift, and go to state 81
    LTE  shift, and go to state 82
    GTE  shift, and go to state 83

    comp  go to state 97


State 67

   53 term: SUB L_PAREN . expression R_PAREN

    SUB         shift, and go to state 40
    L_PAREN     shift, and go to state 56
    IDENTIFIER  shift, and go to state 42
    NUMBER      shift, and go to state 43

    expression  go to state 98
    mult_expr   go to state 48
    term        go to state 49
    var         go to state 50


State 68

   51 term: SUB NUMBER .

    $default  reduce using rule 51 (term)


State 69

   49 term: SUB var .

    $default  reduce using rule 49 (term)


State 70

   24 bool_expr: bool_expr . OR relation_and_expr
   33 relation_expr: L_PAREN bool_expr . R_PAREN

    OR       shift, and go to state 74
    R_PAREN  shift, and go to state 99


State 71

   27 relation_expr: expression . comp expression
   41 expression: expression . ADD mult_expr
   42           | expression . SUB mult_expr
   52 term: L_PAREN expression . R_PAREN

    ADD      shift, and go to state 76
    SUB      shift, and go to state 77
    EQ       shift, and go to state 78
    NEQ      shift, and go to state 79
    LT       shift, and go to state 80
    GT       shift, and go to state 81
    LTE      shift, and go to state 82
    GTE      shift, and go to state 83
    R_PAREN  shift, and go to state 100

    comp  go to state 84


State 72

   54 term: IDENTIFIER L_PAREN . R_PAREN
   55     | IDENTIFIER L_PAREN . expression_loop R_PAREN

    SUB         shift, and go to state 40
    L_PAREN     shift, and go to state 56
    R_PAREN     shift, and go to state 101
    IDENTIFIER  shift, and go to state 42
    NUMBER      shift, and go to state 43

    expression       go to state 102
    mult_expr        go to state 48
    term             go to state 49
    expression_loop  go to state 103
    var              go to state 50


State 73

   13 statement: IF bool_expr THEN . statement_loop ENDIF
   14          | IF bool_expr THEN . statement_loop ELSE statement_loop ENDIF

    IF          shift, and go to state 25
    WHILE       shift, and go to state 26
    DO          shift, and go to state 27
    CONTINUE    shift, and go to state 28
    READ        shift, and go to state 29
    WRITE       shift, and go to state 30
    RETURN      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32

    statement_loop  go to state 104
    statement       go to state 34
    var             go to state 35


State 74

   24 bool_expr: bool_expr OR . relation_and_expr

    NOT         shift, and go to state 37
    TRUE        shift, and go to state 38
    FALSE       shift, and go to state 39
    SUB         shift, and go to state 40
    L_PAREN     shift, and go to state 41
    IDENTIFIER  shift, and go to state 42
    NUMBER      shift, and go to state 43

    relation_and_expr  go to state 105
    relation_expr      go to state 46
    expression         go to state 47
    mult_expr          go to state 48
    term               go to state 49
    var                go to state 50


State 75

   26 relation_and_expr: relation_and_expr AND . relation_expr

    NOT         shift, and go to state 37
    TRUE        shift, and go to state 38
    FALSE       shift, and go to state 39
    SUB         shift, and go to state 40
    L_PAREN     shift, and go to state 41
    IDENTIFIER  shift, and go to state 42
    NUMBER      shift, and go to state 43

    relation_expr  go to state 106
    expression     go to state 47
    mult_expr      go to state 48
    term           go to state 49
    var            go to state 50


State 76

   41 expression: expression ADD . mult_expr

    SUB         shift, and go to state 40
    L_PAREN     shift, and go to state 56
    IDENTIFIER  shift, and go to state 42
    NUMBER      shift, and go to state 43

    mult_expr  go to state 107
    term       go to state 49
    var        go to state 50


State 77

   42 expression: expression SUB . mult_expr

    SUB         shift, and go to state 40
    L_PAREN     shift, and go to state 56
    IDENTIFIER  shift, and go to state 42
    NUMBER      shift, and go to state 43

    mult_expr  go to state 108
    term       go to state 49
    var        go to state 50


State 78

   34 comp: EQ .

    $default  reduce using rule 34 (comp)


State 79

   35 comp: NEQ .

    $default  reduce using rule 35 (comp)


State 80

   36 comp: LT .

    $default  reduce using rule 36 (comp)


State 81

   37 comp: GT .

    $default  reduce using rule 37 (comp)


State 82

   38 comp: LTE .

    $default  reduce using rule 38 (comp)


State 83

   39 comp: GTE .

    $default  reduce using rule 39 (comp)


State 84

   27 relation_expr: expression comp . expression

    SUB         shift, and go to state 40
    L_PAREN     shift, and go to state 56
    IDENTIFIER  shift, and go to state 42
    NUMBER      shift, and go to state 43

    expression  go to state 109
    mult_expr   go to state 48
    term        go to state 49
    var         go to state 50


State 85

   45 mulop: MULT .

    $default  reduce using rule 45 (mulop)


State 86

   46 mulop: DIV .

    $default  reduce using rule 46 (mulop)


State 87

   47 mulop: MOD .

    $default  reduce using rule 47 (mulop)


State 88

   44 mult_expr: mult_expr mulop . term

    SUB         shift, and go to state 40
    L_PAREN     shift, and go to state 56
    IDENTIFIER  shift, and go to state 42
    NUMBER      shift, and go to state 43

    term  go to state 110
    var   go to state 50


State 89

   15 statement: WHILE bool_expr BEGINLOOP . statement_loop ENDLOOP

    IF          shift, and go to state 25
    WHILE       shift, and go to state 26
    DO          shift, and go to state 27
    CONTINUE    shift, and go to state 28
    READ        shift, and go to state 29
    WRITE       shift, and go to state 30
    RETURN      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32

    statement_loop  go to state 111
    statement       go to state 34
    var             go to state 35


State 90

    7 statement_loop: statement_loop . statement SEMICOLON
   16 statement: DO BEGINLOOP statement_loop . ENDLOOP WHILE bool_expr

    IF          shift, and go to state 25
    WHILE       shift, and go to state 26
    DO          shift, and go to state 27
    ENDLOOP     shift, and go to state 112
    CONTINUE    shift, and go to state 28
    READ        shift, and go to state 29
    WRITE       shift, and go to state 30
    RETURN      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32

    statement  go to state 60
    var        go to state 35


State 91

   22 var_loop: var_loop COMMA . var

    IDENTIFIER  shift, and go to state 32

    var  go to state 113


State 92

   41 expression: expression . ADD mult_expr
   42           | expression . SUB mult_expr
   52 term: L_PAREN expression . R_PAREN

    ADD      shift, and go to state 76
    SUB      shift, and go to state 77
    R_PAREN  shift, and go to state 100


State 93

   41 expression: expression . ADD mult_expr
   42           | expression . SUB mult_expr
   59 var: IDENTIFIER L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    ADD               shift, and go to state 76
    SUB               shift, and go to state 77
    R_SQUARE_BRACKET  shift, and go to state 114


State 94

    7 statement_loop: statement_loop statement SEMICOLON .

    $default  reduce using rule 7 (statement_loop)


State 95

   12 statement: var ASSIGN expression .
   41 expression: expression . ADD mult_expr
   42           | expression . SUB mult_expr

    ADD  shift, and go to state 76
    SUB  shift, and go to state 77

    $default  reduce using rule 12 (statement)


State 96

    9 declaration: id_loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 9 (declaration)


State 97

   28 relation_expr: NOT expression comp . expression

    SUB         shift, and go to state 40
    L_PAREN     shift, and go to state 56
    IDENTIFIER  shift, and go to state 42
    NUMBER      shift, and go to state 43

    expression  go to state 115
    mult_expr   go to state 48
    term        go to state 49
    var         go to state 50


State 98

   41 expression: expression . ADD mult_expr
   42           | expression . SUB mult_expr
   53 term: SUB L_PAREN expression . R_PAREN

    ADD      shift, and go to state 76
    SUB      shift, and go to state 77
    R_PAREN  shift, and go to state 116


State 99

   33 relation_expr: L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 33 (relation_expr)


State 100

   52 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 52 (term)


State 101

   54 term: IDENTIFIER L_PAREN R_PAREN .

    $default  reduce using rule 54 (term)


State 102

   41 expression: expression . ADD mult_expr
   42           | expression . SUB mult_expr
   56 expression_loop: expression .

    ADD  shift, and go to state 76
    SUB  shift, and go to state 77

    $default  reduce using rule 56 (expression_loop)


State 103

   55 term: IDENTIFIER L_PAREN expression_loop . R_PAREN
   57 expression_loop: expression_loop . COMMA expression

    COMMA    shift, and go to state 117
    R_PAREN  shift, and go to state 118


State 104

    7 statement_loop: statement_loop . statement SEMICOLON
   13 statement: IF bool_expr THEN statement_loop . ENDIF
   14          | IF bool_expr THEN statement_loop . ELSE statement_loop ENDIF

    IF          shift, and go to state 25
    ENDIF       shift, and go to state 119
    ELSE        shift, and go to state 120
    WHILE       shift, and go to state 26
    DO          shift, and go to state 27
    CONTINUE    shift, and go to state 28
    READ        shift, and go to state 29
    WRITE       shift, and go to state 30
    RETURN      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32

    statement  go to state 60
    var        go to state 35


State 105

   24 bool_expr: bool_expr OR relation_and_expr .
   26 relation_and_expr: relation_and_expr . AND relation_expr

    AND  shift, and go to state 75

    $default  reduce using rule 24 (bool_expr)


State 106

   26 relation_and_expr: relation_and_expr AND relation_expr .

    $default  reduce using rule 26 (relation_and_expr)


State 107

   41 expression: expression ADD mult_expr .
   44 mult_expr: mult_expr . mulop term

    MULT  shift, and go to state 85
    DIV   shift, and go to state 86
    MOD   shift, and go to state 87

    $default  reduce using rule 41 (expression)

    mulop  go to state 88


State 108

   42 expression: expression SUB mult_expr .
   44 mult_expr: mult_expr . mulop term

    MULT  shift, and go to state 85
    DIV   shift, and go to state 86
    MOD   shift, and go to state 87

    $default  reduce using rule 42 (expression)

    mulop  go to state 88


State 109

   27 relation_expr: expression comp expression .
   41 expression: expression . ADD mult_expr
   42           | expression . SUB mult_expr

    ADD  shift, and go to state 76
    SUB  shift, and go to state 77

    $default  reduce using rule 27 (relation_expr)


State 110

   44 mult_expr: mult_expr mulop term .

    $default  reduce using rule 44 (mult_expr)


State 111

    7 statement_loop: statement_loop . statement SEMICOLON
   15 statement: WHILE bool_expr BEGINLOOP statement_loop . ENDLOOP

    IF          shift, and go to state 25
    WHILE       shift, and go to state 26
    DO          shift, and go to state 27
    ENDLOOP     shift, and go to state 121
    CONTINUE    shift, and go to state 28
    READ        shift, and go to state 29
    WRITE       shift, and go to state 30
    RETURN      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32

    statement  go to state 60
    var        go to state 35


State 112

   16 statement: DO BEGINLOOP statement_loop ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 122


State 113

   22 var_loop: var_loop COMMA var .

    $default  reduce using rule 22 (var_loop)


State 114

   59 var: IDENTIFIER L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 59 (var)


State 115

   28 relation_expr: NOT expression comp expression .
   41 expression: expression . ADD mult_expr
   42           | expression . SUB mult_expr

    ADD  shift, and go to state 76
    SUB  shift, and go to state 77

    $default  reduce using rule 28 (relation_expr)


State 116

   53 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 53 (term)


State 117

   57 expression_loop: expression_loop COMMA . expression

    SUB         shift, and go to state 40
    L_PAREN     shift, and go to state 56
    IDENTIFIER  shift, and go to state 42
    NUMBER      shift, and go to state 43

    expression  go to state 123
    mult_expr   go to state 48
    term        go to state 49
    var         go to state 50


State 118

   55 term: IDENTIFIER L_PAREN expression_loop R_PAREN .

    $default  reduce using rule 55 (term)


State 119

   13 statement: IF bool_expr THEN statement_loop ENDIF .

    $default  reduce using rule 13 (statement)


State 120

   14 statement: IF bool_expr THEN statement_loop ELSE . statement_loop ENDIF

    IF          shift, and go to state 25
    WHILE       shift, and go to state 26
    DO          shift, and go to state 27
    CONTINUE    shift, and go to state 28
    READ        shift, and go to state 29
    WRITE       shift, and go to state 30
    RETURN      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32

    statement_loop  go to state 124
    statement       go to state 34
    var             go to state 35


State 121

   15 statement: WHILE bool_expr BEGINLOOP statement_loop ENDLOOP .

    $default  reduce using rule 15 (statement)


State 122

   16 statement: DO BEGINLOOP statement_loop ENDLOOP WHILE . bool_expr

    NOT         shift, and go to state 37
    TRUE        shift, and go to state 38
    FALSE       shift, and go to state 39
    SUB         shift, and go to state 40
    L_PAREN     shift, and go to state 41
    IDENTIFIER  shift, and go to state 42
    NUMBER      shift, and go to state 43

    bool_expr          go to state 125
    relation_and_expr  go to state 45
    relation_expr      go to state 46
    expression         go to state 47
    mult_expr          go to state 48
    term               go to state 49
    var                go to state 50


State 123

   41 expression: expression . ADD mult_expr
   42           | expression . SUB mult_expr
   57 expression_loop: expression_loop COMMA expression .

    ADD  shift, and go to state 76
    SUB  shift, and go to state 77

    $default  reduce using rule 57 (expression_loop)


State 124

    7 statement_loop: statement_loop . statement SEMICOLON
   14 statement: IF bool_expr THEN statement_loop ELSE statement_loop . ENDIF

    IF          shift, and go to state 25
    ENDIF       shift, and go to state 126
    WHILE       shift, and go to state 26
    DO          shift, and go to state 27
    CONTINUE    shift, and go to state 28
    READ        shift, and go to state 29
    WRITE       shift, and go to state 30
    RETURN      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32

    statement  go to state 60
    var        go to state 35


State 125

   16 statement: DO BEGINLOOP statement_loop ENDLOOP WHILE bool_expr .
   24 bool_expr: bool_expr . OR relation_and_expr

    OR  shift, and go to state 74

    $default  reduce using rule 16 (statement)


State 126

   14 statement: IF bool_expr THEN statement_loop ELSE statement_loop ENDIF .

    $default  reduce using rule 14 (statement)
